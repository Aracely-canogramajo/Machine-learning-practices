import numpy as np

def run(Xtrain_file, Ytrain_file, test_data_file, pred_file):  
  # read data
  xtrain = np.genfromtxt(Xtrain_file, dtype= float, delimiter=",");
  ytrain = np.genfromtxt(Ytrain_file, dtype= float, delimiter=",");
  test = np.genfromtxt(test_data_file, dtype= float, delimiter=",");

  # choose K
  k = 3;
  
  p = np.empty(len(test)); #make prediction array
  index = 0;  
  line = 0;
  for h in test:
    a = np.zeros(shape=(ytrain.size,2)) # create array to store distance & class    
    temp = 0;
    for x in xtrain:
      dist = np.linalg.norm(h - x); #find euclidean distance
      a[temp] = [dist, ytrain[temp]]; # save each dist & class into array
      temp += 1;
      
    
    a = a[np.argsort(a[:,0])] # sort array by distance
    classes = np.zeros(11); #make array for classes
    
    for i in range(k):
      j = int(a[i][1]);
      classes[j] += 1;
      
    max_class = np.argmax(classes);
    p[index] = max_class;
    index += 1;
    line += 1;
    
    
  # output test results 
  np.savetxt(pred_file, p, fmt='%1d', delimiter=",");  


# def main(Xtrain_file, Ytrain_file, pred_file):
  # print("in main");
  # # Reading data
  # # xtrain = np.loadtxt(Xtrain_file, dtype=float, delimiter=',');
  # # ytrain = np.loadtxt(Ytrain_file, dtype=float, delimiter=',');
  # xtrain = np.genfromtxt(Xtrain_file, dtype= float, delimiter=",");
  # ytrain = np.genfromtxt(Ytrain_file, dtype= float, delimiter=",");

  # training_size = int((xtrain.size/xtrain[0].size)/2);
  
  # # split training data into training data and testing data
  # train = np.empty(training_size); # create array for training data
  # train_label = np.empty(training_size); # create array for training label
  # test = np.empty(training_size); # create array for test data
  # test_label = np.empty(training_size); # create array for test label
  
  # temp = np.array_split(xtrain, 2); #split xtrain into two
  # train = temp[0]; # save half into train
  # test = temp[1]; #save other half into test
  
  # temp = np.array_split(ytrain,2); #split the labels into two
  # train_label = temp[0];
  # test_label = temp[1];
    
  # # call run
  # run(train, train_label, test, pred_file);
  

if __name__ == "__main__":
  
  Xtrain_file = "Xtrain.csv"
  Ytrain_file = "Ytrain.csv"  
  pred_file = 'result'
  
  # main(Xtrain_file, Ytrain_file, pred_file)
  run(Xtrain_file, Ytrain_file, test_data_file, pred_file)